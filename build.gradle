buildscript {
    ext {
        springBootVersion = '2.7.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.1.0'
}

group = 'com.qaiware'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.liquibase:liquibase-core:4.15.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.0'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.15.0'
    liquibaseRuntime 'info.picocli:picocli:4.6.3'
    liquibaseRuntime 'mysql:mysql-connector-java:8.0.28'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    /* Lets you pick Spring Boot profile by system properties, e.g. gradle bootRun -Dspring.profiles.active=dev */
    systemProperties = System.properties
}
def prop = new Properties()
file("src/main/resources/application.properties")
        .withInputStream { prop.load(it) }

test.onlyIf { prop.getProperty('spring.profiles.active').equalsIgnoreCase('test') }

liquibase {
    activities {
        master {
            changeLogFile 'src/main/resources/db/changelog/db.changelog-master.xml'
            url "jdbc:mysql://${System.env.DB_LOCALHOST}:${System.env.MYSQL_DB_PORT}/simple_chat_task?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8"
            driver prop.getProperty("spring.datasource.driver-class-name")
            username System.env.MYSQL_DB_USERNAME
            password System.env.MYSQL_DB_PASSWORD
        }
    }
}